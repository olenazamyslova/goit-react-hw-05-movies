{"version":3,"file":"static/js/73.e896194c.chunk.js","mappings":"uPAEaA,EAAQC,EAAAA,EAAAA,IAAH,+CAILC,EAAYD,EAAAA,EAAAA,EAAH,6CAITE,EAAYF,EAAAA,EAAAA,EAAH,2CAITG,EAAYH,EAAAA,EAAAA,GAAH,iG,6BCPTI,EAAO,WAClB,OAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAWC,EAAAA,EAAAA,MAAXD,OACR,GAA4BH,EAAAA,EAAAA,WAAS,GAArC,eAAOK,EAAP,KAAeC,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,YACU,WAChB,IACED,GAAU,SAAAE,GAAS,OAAKA,CAAL,KACnBC,EAAAA,EAAAA,IAAQN,GAAQO,MAAK,SAAAC,GAAI,OAAIT,EAAQS,EAAKV,KAAjB,GAK1B,CAJC,MAAOW,GACPC,QAAQC,IAAIF,EACb,CALD,QAMEN,GAAU,SAAAE,GAAS,OAAKA,CAAL,GACpB,CACF,CACDO,EACD,GAAE,CAACZ,KAEF,gCACGE,IAAU,SAAC,IAAD,KACX,SAACP,EAAD,UACGG,EAAKe,QACJf,EAAKgB,KAAI,SAAAC,GACP,OACE,0BACGA,EAAMC,cACL,SAACzB,EAAD,CACE0B,MAAM,QACNC,OAAO,QACPC,IAAG,yCAAoCJ,EAAMC,cAC7CI,IAAKL,EAAMM,aAGb,gBACEJ,MAAM,QACNC,OAAO,QACPC,IAAKG,EACLF,IAAKL,EAAMM,aAGf,SAAC5B,EAAD,UAAYsB,EAAMQ,QAClB,SAAC7B,EAAD,UAAYqB,EAAMM,cAjBXN,EAAMS,GAoBlB,QAIV,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Image = styled.img`\n  margin-bottom: 5px;\n`;\n\nexport const ActorName = styled.p`\n  max-width: 100px;\n`;\n\nexport const Character = styled.p`\nmax-width: 100px;\n`;\n\nexport const ActorList = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n  list-style: none;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'components/services/API';\nimport { ActorList, ActorName, Character, Image } from './Cast.styled';\nimport { PuffLoader } from 'components/Loader/Loader';\nimport Img from '../../Image/Image.png.webp';\n\nexport const Cast = () => {\n  const [cast, setCast] = useState({});\n  const { homeId } = useParams();\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    const fetchCast = () => {\n      try {\n        setLoader(prevState => !prevState);\n        getCast(homeId).then(resp => setCast(resp.cast));\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoader(prevState => !prevState);\n      }\n    };\n    fetchCast();\n  }, [homeId]);\n  return (\n    <>\n      {loader && <PuffLoader />}\n      <ActorList>\n        {cast.length &&\n          cast.map(actor => {\n            return (\n              <li key={actor.id}>\n                {actor.profile_path ? (\n                  <Image\n                    width=\"100px\"\n                    height=\"150px\"\n                    src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n                    alt={actor.character}\n                  />\n                ) : (\n                  <img\n                    width=\"100px\"\n                    height=\"150px\"\n                    src={Img}\n                    alt={actor.character}\n                  />\n                )}\n                <ActorName>{actor.name}</ActorName>\n                <Character>{actor.character}</Character>\n              </li>\n            );\n          })}\n      </ActorList>\n    </>\n  );\n};\n"],"names":["Image","styled","ActorName","Character","ActorList","Cast","useState","cast","setCast","homeId","useParams","loader","setLoader","useEffect","prevState","getCast","then","resp","error","console","log","fetchCast","length","map","actor","profile_path","width","height","src","alt","character","Img","name","id"],"sourceRoot":""}
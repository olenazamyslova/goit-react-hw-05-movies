{"version":3,"file":"static/js/722.5f5485f2.chunk.js","mappings":"6QAEaA,EAAMC,EAAAA,EAAAA,IAAH,iHAQHC,EAAQD,EAAAA,EAAAA,GAAH,6CAILE,EAAQF,EAAAA,EAAAA,EAAH,6CAILG,EAAgBH,EAAAA,EAAAA,GAAH,6CAIbI,EAAWJ,EAAAA,EAAAA,EAAH,6CAIRK,EAAcL,EAAAA,EAAAA,GAAH,6CAIXM,EAASN,EAAAA,EAAAA,EAAH,6C,SCpBNO,EAAW,SAAC,GAUlB,IAAD,IATJC,KACEC,EAQE,EARFA,YACAC,EAOE,EAPFA,eACAC,EAME,EANFA,SACAC,EAKE,EALFA,QACAC,EAIE,EAJFA,aACAC,EAGE,EAHFA,OACAC,EAEE,EAFFA,aAGF,OACE,UAAChB,EAAD,YACE,0BACE,gBACEiB,IAAG,yCAAoCP,GACvCQ,IAAKL,EACLM,MAAM,QACNC,OAAO,aAGX,4BACE,UAAClB,EAAD,WACGS,EADH,KACqB,IAAIU,KAAKL,GAAcM,cAD5C,QAGA,UAACnB,EAAD,0BAAoBoB,KAAKC,MAAqB,GAAfV,GAA/B,QACA,SAACV,EAAD,wBACA,SAACC,EAAD,UAAWO,KACX,SAACN,EAAD,sBACA,SAACC,EAAD,UAASQ,GAAUA,EAAOU,KAAI,SAAAC,GAAK,gBAAOA,EAAMC,KAAb,eAI1C,E,wCCxCYC,EAAa3B,EAAAA,EAAAA,OAAH,6CAIV4B,GAAW5B,EAAAA,EAAAA,GAAO6B,EAAAA,GAAP7B,CAAH,4FAMR8B,EAAe9B,EAAAA,EAAAA,IAAH,8KAQZ+B,EAAO/B,EAAAA,EAAAA,GAAH,kF,oBCRJgC,EAAe,WAAO,IAAD,IAChC,GAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOzB,EAAP,KAAa0B,EAAb,KACQC,GAAWC,EAAAA,EAAAA,MAAXD,OACFE,GAAWC,EAAAA,EAAAA,MACjB,GAA4BL,EAAAA,EAAAA,WAAS,GAArC,eAAOM,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8FAEID,GAAU,SAAAE,GAAS,OAAKA,CAAL,IAFvB,UAGUC,EAAAA,EAAAA,IAAYR,GAAQS,MAAK,SAAAC,GAAI,OAAIX,EAAQW,EAAZ,IAHvC,sDAKIC,QAAQC,IAAR,MALJ,uBAOIP,GAAU,SAAAE,GAAS,OAAKA,CAAL,IAPvB,2EADc,uBAAC,WAAD,wBAYdM,EACD,GAAE,CAACb,IAEJ,IAAMc,EAAY,oBAAGZ,EAASa,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,OACE,gCACGZ,IAAU,SAAC,IAAD,KACX,SAACZ,EAAD,CAAYyB,KAAK,SAAjB,UACE,UAACxB,EAAD,CAAUyB,GAAIJ,EAAd,WACE,SAAC,MAAD,CAAqBK,KAAM,SAD7B,gBAKF,SAAC/C,EAAD,CAAUC,KAAMA,KAChB,UAACsB,EAAD,YACE,mDACA,UAACC,EAAD,YACE,yBACE,SAAC,KAAD,CAASsB,GAAI,OAAb,qBAEF,yBACE,SAAC,KAAD,CAASA,GAAI,UAAb,8BAIN,SAAC,KAAD,MAGL,C","sources":["components/FilmCard/FilmCard.styled.jsx","components/FilmCard/FilmCard.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  display: flex;\n  gap: 15px;\n  padding: 15px;\n  padding-left: 0;\n  padding-top: 0;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 15px;\n`;\n\nexport const Score = styled.p`\n  margin-top: 15px;\n`;\n\nexport const OverviewTitle = styled.h3`\n  margin-top: 15px;\n`;\n\nexport const Overview = styled.p`\n  margin-top: 15px;\n`;\n\nexport const GenresTitle = styled.h3`\n  margin-top: 15px;\n`;\n\nexport const Genres = styled.p`\n  margin-top: 15px;\n`;\n","import {\n  Box,\n  Genres,\n  GenresTitle,\n  Overview,\n  OverviewTitle,\n  Score,\n  Title,\n} from './FilmCard.styled';\n\nexport const FilmCard = ({\n  film: {\n    poster_path,\n    original_title,\n    overview,\n    tagline,\n    vote_average,\n    genres,\n    release_date,\n  },\n}) => {\n  return (\n    <Box>\n      <div>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={tagline}\n          width=\"400px\"\n          height=\"450px\"\n        />\n      </div>\n      <div>\n        <Title>\n          {original_title} ({new Date(release_date).getFullYear()})\n        </Title>\n        <Score>User Score: {Math.round(vote_average * 10)}%</Score>\n        <OverviewTitle>Overview</OverviewTitle>\n        <Overview>{overview}</Overview>\n        <GenresTitle>Genres</GenresTitle>\n        <Genres>{genres && genres.map(genre => `${genre.name} `)}</Genres>\n      </div>\n    </Box>\n  );\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const ButtonBack = styled.button`\n  margin-top: 10px;\n`;\n\nexport const BackLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n`;\n\nexport const AddiionalBox = styled.div`\n  box-shadow: 0px -5px 8px 0px rgba(34, 60, 80, 0.25),\n    0px 5px 8px 0px rgba(34, 60, 80, 0.25);\n\n  padding-top: 10px;\n  padding-bottom: 10px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n","import { FilmCard } from 'components/FilmCard/FilmCard';\nimport { getFilmCard } from 'components/services/API';\nimport { useEffect, useState } from 'react';\nimport { NavLink, Outlet, useParams, useLocation } from 'react-router-dom';\nimport {\n  AddiionalBox,\n  BackLink,\n  ButtonBack,\n  List,\n} from './MovieDetails.styled';\nimport { IoIosArrowRoundBack } from 'react-icons/io';\nimport { PuffLoader } from 'components/Loader/Loader';\n\nexport const MovieDetails = () => {\n  const [film, setFilm] = useState({});\n  const { homeId } = useParams();\n  const location = useLocation();\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    async function fetchFilmCard() {\n      try {\n        setLoader(prevState => !prevState);\n        await getFilmCard(homeId).then(resp => setFilm(resp));\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoader(prevState => !prevState);\n      }\n    }\n\n    fetchFilmCard();\n  }, [homeId]);\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <>\n      {loader && <PuffLoader />}\n      <ButtonBack type=\"button\">\n        <BackLink to={backLinkHref}>\n          <IoIosArrowRoundBack size={'15px'} />\n          Go back\n        </BackLink>\n      </ButtonBack>\n      <FilmCard film={film} />\n      <AddiionalBox>\n        <p>Additional information</p>\n        <List>\n          <li>\n            <NavLink to={'cast'}>Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to={'reviews'}>Reviews</NavLink>\n          </li>\n        </List>\n      </AddiionalBox>\n      <Outlet />\n    </>\n  );\n};\n"],"names":["Box","styled","Title","Score","OverviewTitle","Overview","GenresTitle","Genres","FilmCard","film","poster_path","original_title","overview","tagline","vote_average","genres","release_date","src","alt","width","height","Date","getFullYear","Math","round","map","genre","name","ButtonBack","BackLink","NavLink","AddiionalBox","List","MovieDetails","useState","setFilm","homeId","useParams","location","useLocation","loader","setLoader","useEffect","prevState","getFilmCard","then","resp","console","log","fetchFilmCard","backLinkHref","state","from","type","to","size"],"sourceRoot":""}